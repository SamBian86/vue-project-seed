{
  "table代码片段_drawer_parent_table_父组件代码": {
    "prefix": "sp_table_handle_drawer_parent_table",
    "body": [
      "<template>\r",
      "  <div>\r",
      "    <yunlin-table\r",
      "      ref=\"yunlinTable\"\r",
      "      :config=\"tableConfig\"\r",
      "      :handle=\"tableHandle\"\r",
      "      :searchparams=\"tableSearchParams\"\r",
      "      v-bind=\"$$attrs\"\r",
      "      @table-selection-listener=\"tableSelectionListener\"\r",
      "      @table-lazyload-listener=\"tableLazyloadListener\"\r",
      "      v-on=\"$$listeners\"\r",
      "    >\r",
      "      <!-- 查询区域 -->\r",
      "      <template slot=\"search\">\r",
      "        <el-form\r",
      "          class=\"table-search-form\"\r",
      "          :inline=\"true\"\r",
      "          :model=\"tableSearchParams\"\r",
      "          @keyup.enter.native=\"searchHandle\"\r",
      "        >\r",
      "          $1\r",
      "          <!-- 查询 -->\r",
      "          <el-form-item>\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:view')\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"searchHandle()\"\r",
      "            >{{ $$t('query') }}</el-button>\r",
      "          </el-form-item>\r",
      "          <!-- 创建 -->\r",
      "          <el-form-item>\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:save')\"\r",
      "              type=\"primary\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"createHandle()\"\r",
      "            >{{ $$t('add') }}</el-button>\r",
      "          </el-form-item>\r",
      "          <!-- 打开draw -->\r",
      "          <el-form-item>\r",
      "            <el-button type=\"primary\" :size=\"tableConfig.tableSearchSize\" @click=\"XXXXXXHandle()\">{{ $$t('xxx') }}</el-button>\r",
      "          </el-form-item>\r",
      "          <!-- 导出 -->\r",
      "          <!-- <el-form-item>\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:export')\"\r",
      "              type=\"primary\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"exportHandle()\"\r",
      "            >{{ $$t('export') }}</el-button>\r",
      "          </el-form-item>-->\r",
      "          <!-- 批量删除 -->\r",
      "          <el-form-item>\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:delete')\"\r",
      "              type=\"danger\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"deleteSectionHandle()\"\r",
      "            >{{ $$t('deleteBatch') }}</el-button>\r",
      "          </el-form-item>\r",
      "          <!-- 批量操作 -->\r",
      "          <!-- <el-form-item>\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:xxx')\"\r",
      "              type=\"danger\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"customSectionHandle({\r",
      "                i18nMessage: 'prompt.customBatch',\r",
      "                i18nRequestMessage: 'bbb.bbb',\r",
      "                request: CCC\r",
      "              })\"\r",
      "            >{{ $$t('ddd.ddd') }}</el-button>\r",
      "          </el-form-item>-->\r",
      "        </el-form>\r",
      "      </template>\r",
      "      <!-- 操作区域 -->\r",
      "      <template slot=\"operate\">\r",
      "        <el-table-column\r",
      "          :label=\"$$t('handle')\"\r",
      "          align=\"center\"\r",
      "          header-align=\"center\"\r",
      "          fixed=\"right\"\r",
      "          width=\"100\"\r",
      "        >\r",
      "          <template slot-scope=\"scope\">\r",
      "            <!-- 修改 -->\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:update')\"\r",
      "              type=\"text\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"editHandle(scope.row)\"\r",
      "            >{{ $$t('update') }}</el-button>\r",
      "            <!-- 单个删除 -->\r",
      "            <el-button\r",
      "              v-if=\"filterPermission('xxx:xxx:delete')\"\r",
      "              type=\"text\"\r",
      "              :size=\"tableConfig.tableSearchSize\"\r",
      "              @click=\"deleteHandle([scope.row.id])\"\r",
      "            >{{ $$t('delete') }}</el-button>\r",
      "          </template>\r",
      "        </el-table-column>\r",
      "      </template>\r",
      "    </yunlin-table>\r",
      "    <yunlin-drawer ref=\"yunlinDrawer\" :config=\"drawerConfig\" v-bind=\"$$attrs\" @drawer-closed=\"drawerClosed\" v-on=\"$$listeners\">\r",
      "      <component\r",
      "        :is=\"drawerComponent\"\r",
      "        :drawer-data=\"drawerData\"\r",
      "        @drawer-close-by-child=\"drawerCloseByChild\"\r",
      "        v-on=\"$$listeners\"\r",
      "      ></component>\r",
      "      <!-- <xxx :drawer-data=\"drawerData\" @drawer-close-by-child=\"drawerCloseByChild\" v-on=\"$$listeners\"></xxx> -->\r",
      "    </yunlin-drawer>\r",
      "  </div>\r",
      "</template>\r",
      "\r",
      "<script>\r",
      "import { mapGetters } from 'vuex'\r",
      "import pageMixin from '@/mixins/page-mixin'\r",
      "import tableDefaultMixin from '@/mixins/table-default-mixin'\r",
      "import drawerDefaultMixin from '@/mixins/drawer-default-mixin'\r",
      "// import { getXXXList, deleteXXX } from '@/api/xxx'\r",
      "// import xxxComponent from './xxx'\r",
      "\r",
      "// 1.修改查询条件\r",
      "// 2.修改授权标识\r",
      "// 3.修改列表相关事件行为\r",
      "// 4.配置接口\r",
      "// 5.添加table项配置\r",
      "// 6.放开$pageSwitch的formDataUpdate配置用于检查详情接口\r",
      "// 7.删除此处注释信息\r",
      "export default {\r",
      "  name: 'Tabel',\r",
      "  // components: { xxxComponent },\r",
      "  mixins: [pageMixin, tableDefaultMixin, drawerDefaultMixin],\r",
      "  data() {\r",
      "    return {\r",
      "      // drawerComponents: {\r",
      "      //   xxx: xxxComponent\r",
      "      // }\r",
      "    }\r",
      "  },\r",
      "  computed: {\r",
      "    // 用于判断是否有权限的方法\r",
      "    ...mapGetters('app', ['filterPermission'])\r",
      "  },\r",
      "  activated() {\r",
      "    // console.log('table activated')\r",
      "  },\r",
      "  created() {\r",
      "    this.init()\r",
      "  },\r",
      "  methods: {\r",
      "    init() {\r",
      "      // 配置查询区域i18n相关select数据\r",
      "      // this.genrateI18nSearchItems()\r",
      "      // console.log('table created')\r",
      "      // 是否显示树形数据\r",
      "      this.tableConfig.rowKey = 'id'\r",
      "      // this.tableConfig.hasPagination = false\r",
      "      // this.tableConfig.lazy = true\r",
      "      this.tableConfig.tableType = 'selection'\r",
      "      // console.log(this.$$attrs)\r",
      "\r",
      "      // 设置获取列表信息\r",
      "      this.tableConfig.tableHead = [\r",
      "        $2\r",
      "      ]\r",
      "      // 是否填充查询条件为空\r",
      "      // this.tableConfig.searchFillEmpty = true\r",
      "      // this.tableSearchParams = {}\r",
      "      // 配置列表请求\r",
      "      // this.tableHandle.list.api = getXXXList\r",
      "      // 配置导出功能\r",
      "      // this.tableHandle.export.api = exportXXX\r",
      "      // 配置删除功能\r",
      "      // this.tableHandle.delete.api = deleteXXX\r",
      "      // this.tableHandle.delete.callback = this.deleteCallback\r",
      "      // 配置节点懒加载功能\r",
      "      // this.tableHandle.lazy.api = lazyXXX\r",
      "      // 配置section删除功能\r",
      "      // this.tableHandle.deleteSection.api = deleteXXX\r",
      "      // console.log('table page created')\r",
      "    },\r",
      "    genrateI18nSearchItems() {\r",
      "      // XXX\r",
      "      // this.smsStatus = [\r",
      "      //   { label: this.$$t('aaa'), value: 0 },\r",
      "      //   { label: this.$$t('aaa'), value: 1 }\r",
      "      // ]\r",
      "    },\r",
      "    // 创建\r",
      "    createHandle(options = { componentNames: ['yunlin-table'] }) {\r",
      "      this.$$pageSwitch('form', { pageType: 'create', ...options })\r",
      "    },\r",
      "    // 编辑\r",
      "    editHandle(item, options = { componentNames: ['yunlin-table'] }) {\r",
      "      this.$$pageSwitch('form', { ...item, pageType: 'edit', formDataUpdate: false, ...options })\r",
      "    },\r",
      "    XXXXXXHandle(row) {\r",
      "      this.setDrawerComponent('xxx')\r",
      "      this.setDrawerData({ data: { pageType: 'create', formDataUpdate: false, t: new Date() } })\r",
      "      this.setDrawerTitle(this.$$t('xxxx'))\r",
      "      this.drawerVisibleHandle()\r",
      "    }\r",
      "    // drawerClosed() {\r",
      "      // drawer关闭以后父页面需要的操作\r",
      "      // this.searchHandle()\r",
      "    // }\r",
      "  }\r",
      "}\r",
      "</script>\r",
      ""
    ],
    "description": "table代码片段_drawer_parent_table_父组件代码"
  }
}
